name: release

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: graphrag-eval
          environment-file: environment.yml
          auto-activate-base: false

      - name: Install dependencies with Poetry
        shell: bash -l {0}
        run: |
          conda activate graphrag-eval
          poetry install --no-interaction --with test

      - name: Run tests that do not depend on OpenAI
        shell: bash -l {0}
        run: |
          conda activate graphrag-eval
          poetry run pytest --cov=graphrag_eval --cov-report=term-missing tests/

      - name: Install dependencies, including openai dependencies, using Poetry
        shell: bash -l {0}
        run: |
          conda activate graphrag-eval
          poetry install --no-interaction --with=openai

      - name: Run tests that depend on OpenAI
        shell: bash -l {0}
        run: |
          conda activate graphrag-eval
          poetry run pytest --cov=graphrag_eval --cov-report=term-missing tests-with-openai/

      - name: Run system tests that call OpenAI
        shell: bash -l {0}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          conda activate graphrag-eval
          poetry run python system-tests/*.py

      - name: Build package
        shell: bash -l {0}
        run: |
          conda activate graphrag-eval
          poetry build

      - name: Publish to TestPyPI
        shell: bash -l {0}
        env:
          TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          conda activate graphrag-eval
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry publish -r testpypi --no-interaction --username __token__ --password $TEST_PYPI_TOKEN

      - name: Publish to PyPI
        shell: bash -l {0}
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          conda activate graphrag-eval
          poetry publish --no-interaction --username __token__ --password $PYPI_TOKEN
